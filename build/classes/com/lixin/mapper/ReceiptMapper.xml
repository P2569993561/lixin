<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lixin.mapper.ReceiptMapper" >
  <resultMap id="BaseResultMap" type="com.lixin.pojo.Receipt" >
    <id column="receipt_id" property="receiptId" jdbcType="VARCHAR" />
    <result column="site" property="site" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="r_name" property="rName" jdbcType="VARCHAR" />
    <result column="r_sex" property="rSex" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    receipt_id, site, phone, user_id, r_name, r_sex
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lixin.pojo.ReceiptExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from receipt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from receipt
    where receipt_id = #{receiptId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from receipt
    where receipt_id = #{receiptId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lixin.pojo.ReceiptExample" >
    delete from receipt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lixin.pojo.Receipt" >
    insert into receipt (receipt_id, site, phone, 
      user_id, r_name, r_sex
      )
    values (#{receiptId,jdbcType=VARCHAR}, #{site,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{rName,jdbcType=VARCHAR}, #{rSex,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lixin.pojo.Receipt" >
    insert into receipt
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="receiptId != null" >
        receipt_id,
      </if>
      <if test="site != null" >
        site,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="rName != null" >
        r_name,
      </if>
      <if test="rSex != null" >
        r_sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="receiptId != null" >
        #{receiptId,jdbcType=VARCHAR},
      </if>
      <if test="site != null" >
        #{site,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="rName != null" >
        #{rName,jdbcType=VARCHAR},
      </if>
      <if test="rSex != null" >
        #{rSex,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lixin.pojo.ReceiptExample" resultType="java.lang.Integer" >
    select count(*) from receipt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update receipt
    <set >
      <if test="record.receiptId != null" >
        receipt_id = #{record.receiptId,jdbcType=VARCHAR},
      </if>
      <if test="record.site != null" >
        site = #{record.site,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.rName != null" >
        r_name = #{record.rName,jdbcType=VARCHAR},
      </if>
      <if test="record.rSex != null" >
        r_sex = #{record.rSex,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update receipt
    set receipt_id = #{record.receiptId,jdbcType=VARCHAR},
      site = #{record.site,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      r_name = #{record.rName,jdbcType=VARCHAR},
      r_sex = #{record.rSex,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lixin.pojo.Receipt" >
    update receipt
    <set >
      <if test="site != null" >
        site = #{site,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="rName != null" >
        r_name = #{rName,jdbcType=VARCHAR},
      </if>
      <if test="rSex != null" >
        r_sex = #{rSex,jdbcType=TINYINT},
      </if>
    </set>
    where receipt_id = #{receiptId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lixin.pojo.Receipt" >
    update receipt
    set site = #{site,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      r_name = #{rName,jdbcType=VARCHAR},
      r_sex = #{rSex,jdbcType=TINYINT}
    where receipt_id = #{receiptId,jdbcType=VARCHAR}
  </update>
</mapper>